/**********************************************************************
--- Qt Architect generated file ---
File: SimulatorDigitalData.cpp
Last generated: Thu Jan 4 16:18:59 2001
DO NOT EDIT!!!  This file will be automatically
regenerated by qtarch.  All changes will be lost.
*********************************************************************/
#include <qt.h>
#include "SimulatorDigitalData.h"

SimulatorDigitalData::SimulatorDigitalData(QWidget *parent, const char *name)
: QWidget(parent, name, 0)
{
	QLabel *qtarch_Label_2 = new QLabel(this, "Label_2");
	qtarch_Label_2->setGeometry(10, 10, 120, 30);
	qtarch_Label_2->setMinimumSize(0, 0);
	qtarch_Label_2->setMaximumSize(32767, 32767);
	qtarch_Label_2->setFocusPolicy(QWidget::NoFocus);
	qtarch_Label_2->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	qtarch_Label_2->setFontPropagation(QWidget::SameFont);
	qtarch_Label_2->setPalettePropagation(QWidget::SameFont);
	#endif
	qtarch_Label_2->setFrameStyle( 0 );
	qtarch_Label_2->setLineWidth( 1 );
	qtarch_Label_2->setMidLineWidth( 0 );
	qtarch_Label_2->QFrame::setMargin( 0 );
	qtarch_Label_2->setText( tr( "Sampling Period" ) );
	qtarch_Label_2->setAlignment( AlignHCenter|AlignVCenter|ExpandTabs );
	qtarch_Label_2->setMargin( 0 );
	Time = new TIMEEDIT(this, "User_1");
	Time->setGeometry(40, 50, 70, 30);
	Time->setMinimumSize(0, 0);
	Time->setMaximumSize(32767, 32767);
	Time->setFocusPolicy(QWidget::StrongFocus);
	Time->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	Time->setFontPropagation(QWidget::SameFont);
	Time->setPalettePropagation(QWidget::SameFont);
	#endif
	/*
	QLabel *qtarch_Label_3 = new QLabel(this, "Label_3");
	qtarch_Label_3->setGeometry(150, 10, 90, 30);
	qtarch_Label_3->setMinimumSize(0, 0);
	qtarch_Label_3->setMaximumSize(32767, 32767);
	qtarch_Label_3->setFocusPolicy(QWidget::NoFocus);
	qtarch_Label_3->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	qtarch_Label_3->setFontPropagation(QWidget::SameFont);
	qtarch_Label_3->setPalettePropagation(QWidget::SameFont);
	#endif
	qtarch_Label_3->setFrameStyle( 0 );
	qtarch_Label_3->setLineWidth( 1 );
	qtarch_Label_3->setMidLineWidth( 0 );
	qtarch_Label_3->QFrame::setMargin( 0 );
	qtarch_Label_3->setText( tr( "Mean Value" ) );
	qtarch_Label_3->setAlignment( AlignHCenter|AlignVCenter|ExpandTabs );
	qtarch_Label_3->setMargin( 0 );
	QLabel *qtarch_Label_4 = new QLabel(this, "Label_4");
	qtarch_Label_4->setGeometry(260, 10, 100, 30);
	qtarch_Label_4->setMinimumSize(0, 0);
	qtarch_Label_4->setMaximumSize(32767, 32767);
	qtarch_Label_4->setFocusPolicy(QWidget::NoFocus);
	qtarch_Label_4->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	qtarch_Label_4->setFontPropagation(QWidget::SameFont);
	qtarch_Label_4->setPalettePropagation(QWidget::SameFont);
	#endif
	qtarch_Label_4->setFrameStyle( 0 );
	qtarch_Label_4->setLineWidth( 1 );
	qtarch_Label_4->setMidLineWidth( 0 );
	qtarch_Label_4->QFrame::setMargin( 0 );
	qtarch_Label_4->setText( tr( "Variation +/-" ) );
	qtarch_Label_4->setAlignment( AlignHCenter|AlignVCenter|ExpandTabs );
	qtarch_Label_4->setMargin( 0 );
	Mean = new INTEDIT(this, "User_2");
	Mean->setGeometry(160, 50, 70, 30);
	Mean->setMinimumSize(0, 0);
	Mean->setMaximumSize(32767, 32767);
	Mean->setFocusPolicy(QWidget::StrongFocus);
	Mean->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	Mean->setFontPropagation(QWidget::SameFont);
	Mean->setPalettePropagation(QWidget::SameFont);
	#endif
	Variation = new INTEDIT(this, "User_3");
	Variation->setGeometry(270, 50, 70, 30);
	Variation->setMinimumSize(0, 0);
	Variation->setMaximumSize(32767, 32767);
	Variation->setFocusPolicy(QWidget::StrongFocus);
	Variation->setBackgroundMode(QWidget::PaletteBackground);
	#if QT_VERSION < 300
	Variation->setFontPropagation(QWidget::SameFont);
	Variation->setPalettePropagation(QWidget::SameFont);
	#endif
	*/
	resize(400,100);
	setMinimumSize(0, 0);
	setMaximumSize(32767, 32767);
}
SimulatorDigitalData::~SimulatorDigitalData()
{
}

